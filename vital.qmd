---
title: "Tidy data analysis for demography using R"
author: Rob J Hyndman
date: 26 June 2024
titlegraphic: bg-06.png
toc: true
abstract: I will introduce the vital package which allows analysis of demographic data using tidy tools. The package uses a variation of tsibble objects as the main data class, so all of the infrastructure available for tsibble and tibble objects can also be used with vital objects. Data may include births, deaths, mortality, fertility, population and migration data. Functions for plotting, smoothing, modelling and forecasting data are included. Models include the classical Lee-Carter model as well as functional data models. Future plans include replicating all of the models available in the demography and StMoMo packages. The package is available at https://pkg.robjhyndman.com/vital/.
format:
  presentation-beamer:
    keep-tex: true
    template-partials:
        - before-title.tex
execute:
  cache: true
  echo: true
  warning: false
  message: false
---

```{r}
#| label: load-packages
#| echo: false
library(knitr)
library(ggplot2)
library(dplyr)
library(vital)
library(tsibble)
library(kableExtra)
aus <- aus_mortality |>
  mutate(State = Code) |>
  as_vital(index = Year,
    key = c(Age, Sex, State),
    .age = "Age",
    .sex = "Sex",
    .deaths = "Deaths",
    .population = "Exposure"
  ) |>
  arrange(desc(State), Year, Age, Sex) |>
  select(-Code) |>
  filter(Sex != "total", !(State %in% c("ACT","ACTOT","NT")))

# Colours to be viridis for continuous scales and Okabe for discrete scales
options(
  ggplot2.continuous.colour="viridis",
  ggplot2.continuous.fill = "viridis",
  ggplot2.discrete.colour = c("#D55E00", "#0072B2","#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442"),
  ggplot2.discrete.fill = c("#D55E00", "#0072B2","#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)
```


# Vital objects

## Demographic data structures in R packages
\vspace*{-0.75cm}

```{r}
#| label: data-classes
#| echo: false
tibble::tribble(
    ~package, ~dataclass,
    "demography", "demogdata",
    "StMoMo", "StMoMoData (created by converting a demogdata object)",
    "StanMoMo", "Lists of matrices",
    "lifecontingencies", "data.frame",
    "BayesMortalityPlus", "tibble (that needs to be converted to a matrix for fitting)",
    "MortalityLaws", "individual vectors",
    "HMDHFDplus", "data.frame",
  )  |>
  kbl(col.names = c("Package", "Data class"),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE
  ) |>
  row_spec(0, bold = TRUE, color = c("#c14b14","#000000")) |>
  column_spec(1, color = "#c14b14")  |>
  column_spec(2, width = "9cm")
```

## tibble objects
\placefig{8.3}{0}{width=2.5cm}{tibble}
\placefig{11.1}{0}{width=2.5cm}{tidyverse}

\alert{Australian Deaths 1901--2020}

\fontsize{10}{10}\sf

```{r}
#| label: tibble
#| echo: false
tibble::as_tibble(aus) |>
  arrange(desc(State), Year, Age, Sex)
```

## tsibble objects
\placefig{8.3}{0}{width=2.5cm}{tsibble}
\alert{Australian Deaths 1901--2020}

\fontsize{10}{10}\sf

```{r}
#| label: tsibble
#| echo: false
tsibble::as_tsibble(aus) |>
  arrange(desc(State), Year, Age, Sex)
```

\begin{textblock}{4}(11.5, 1)
\fontsize{11}{12}\sf
\begin{block}{Variables}
Index:
  \begin{itemize}
    \item \texttt{Year}
  \end{itemize}
Keys:
  \begin{itemize}
    \item \texttt{Age}
    \item \texttt{Sex}
    \item \texttt{State}
  \end{itemize}
\end{block}
\end{textblock}

\begin{textblock}{4}(11.5, 4.73)
\fontsize{11}{12}\sf
\begin{block}{}
Every row must have a unique combination of Index and Keys
\end{block}
\end{textblock}

## vital objects
\placefig{8.3}{0}{width=2.5cm}{vital-hex}
\alert{Australian Deaths 1901--2020}

\fontsize{10}{10}\sf

```{r}
#| label: vital
aus
```

\begin{textblock}{4}(11.5, 1.)
\fontsize{11}{12}\sf
\begin{block}{Variables}
Index:
  \begin{itemize}
    \item \texttt{Year}
  \end{itemize}
Keys:
  \begin{itemize}
    \item \texttt{Age}
    \item \texttt{Sex}
    \item \texttt{State}
  \end{itemize}
\end{block}
\end{textblock}

\begin{textblock}{4}(11.5, 4.73)
\fontsize{11}{12}\sf
\begin{block}{}
Every row must have a unique combination of Index and Keys
\end{block}
\end{textblock}

\begin{textblock}{4}(11.5, 6.5)
\fontsize{11}{12}\sf
\begin{block}{}
Variables denoting age, sex, deaths, births and population can also be specified.
\end{block}
\end{textblock}

## vital objects
\fontsize{11}{13}\sf

```{r}
#| label: vital_index
index_var(aus)
```

\vspace*{0.4cm}

```{r}
#| label: vital_keys
key_vars(aus)
```

\vspace*{0.4cm}

```{r}
#| label: vital_vars
vital_vars(aus)
```

# Using the Human Mortality and Fertility Databases

## Human Mortality Database

\begin{textblock}{3.02}(11.98,-0.13)
\begin{alertblock}{}\hfill
\textbf{mortality.org}
\end{alertblock}
\end{textblock}
\fullwidth{hmd}

## Human Fertility Database

\begin{textblock}{4.2}(10.8,-0.13)
\begin{alertblock}{}\hfill
\textbf{humanfertility.org}
\end{alertblock}
\end{textblock}
\fullwidth{hfd}


## HMD imports
\fontsize{10}{10}\sf

```{r}
#| eval: false
norway <- read_hmd(
  country = "NOR",
  username = "Nora.Weigh@mymail.com",
  password = "FF!5xeEFa6"
)
norway_births <- read_hmd(
  country = "NOR",
  username = "Nora.Weigh@mymail.com",
  password = "FF!5xeEFa6",
  variables = "Births"
)
```

\fontsize{14}{15}\sf\vspace*{-0.2cm}

* Uses `HMDHFDplus` package to handle the downloads.
* Default variables: `Deaths`, `Exposures`, `Population`, `Mx`
* Only $1\times1$ data supported.
* `read_hmd_files()` and `read_hfd_files()` allow reading of downloaded files.

## HMD imports
\fontsize{11}{11}\sf

```{r}
#| label: norway_births
norway_births
```


# Plots

## Recall: Australian mortality data
\fontsize{10}{11}\sf

```{r}
#| label: aus
aus
```

## Rainbow plots
\fontsize{10}{11}\sf

```{r}
#| label: plot0
#| fig-height: 4.3
aus |> autoplot(Mortality) + scale_y_log10()
```

## Rainbow plots
\fontsize{10}{11}\sf

```{r}
#| label: plot1
#| fig-height: 4.3
aus |> filter(State == "VIC") |> autoplot(Mortality) + scale_y_log10()
```

## Rainbow plots
\fontsize{10}{11}\sf

```{r}
#| label: plot2
#| fig-height: 3.5
aus |> filter(State == "VIC") |>
  mutate(Exposure = if_else(Sex == "female", -Exposure, Exposure)) |>
  autoplot(Exposure) +
  facet_grid(State ~ Sex, scales = "free_x") + coord_flip()
```

# Life tables and life expectancy

## Life tables
\fontsize{10}{11}\sf

```{r}
#| label: life-tables
life_table(aus)
```

## Life expectancy

\fontsize{10}{11}\sf

```{r}
#| label: life-expectancy
life_expectancy(aus)
```


## Life expectancy

\fontsize{10}{11}\sf

```{r}
#| label: life-expectancy2
#| fig-height: 3.5
life_expectancy(aus) |>
  ggplot(aes(x = Year, y = ex, colour = State)) +
  geom_line(linewidth = 1) +
  facet_grid(. ~ Sex)
```

## Life table calculations

* All available years and ages are included in the tables.
* $q_x = m_x/(1 + [(1-a_x) m_x])$ as per Chiang (1984).
* The code has only been tested for data based on single-year age groups.
* Same code base as for the demography package.
* Life expectancy with `life_expectancy()` computes $e_x$ with $x=0$ by default, but other values are possible.

# Mortality models

## Mortality models

Let $m_{x,t}$ be the mortality rate at age $x$ in year $t$.
\begin{block}{}\vspace*{-0.5cm}
\begin{align*}
&\text{Naive model:} & m_{x,t} &= m_{x,t-1} + \varepsilon_{x,t} \\[0.3cm]
&\text{Mean model:} & m_{x,t} &= \mu_{x} + \varepsilon_{x,t} \\[0.3cm]
&\text{Lee-Carter model:} & \log(m_{x,t}) &= a_x + k_t b_x + \varepsilon_{x,t}
\end{align*}
where $\varepsilon_{x,t}\sim$ is noise term with variance $\sigma_x^2$.
\end{block}

## Mortality models
\fontsize{10}{11}\sf

```{r}
#| label: benchmarks
fit <- aus |>
  model(
    naive = FNAIVE(Mortality),
    mean = FMEAN(Mortality),
    lc = LC(log(Mortality))
  )
fit
```

## Naive model
\fontsize{10}{11}\sf

```{r}
#| label: benchmarks2
fit |>
  filter(Sex == "female", State == "NSW") |>
  select(naive) |>
  report()
```

## Naive models
\fontsize{10}{11}\sf

```{r}
#| label: benchmarks3
#| fig-height: 3.7
fit |>
  select(naive) |>
  autoplot() + scale_y_log10()
```

## Lee-Carter models

Let $m_{x,t}$ be the mortality rate at age $x$ in year $t$.
\begin{block}{}
\centerline{$\log(m_{x,t}) = a_x + k_t b_x + \varepsilon_{x,t}$}
\end{block}

* $a_x$ is the mean log mortality rate at age $x$.
* $k_t$ tracks mortality changes over time.
* $b_x$ allows changes in mortality rates to vary by age.
* $\varepsilon_{x,t}$ is the error term.
* Estimation of $k_t$ and $b_x$ via principal component analysis.
* $k_t$ forecast using a random walk with drift = ARIMA(0,1,0)

## Lee-Carter models
\fontsize{10}{10}\sf

```{r}
#| label: lc2
fit |>
  filter(Sex == "female", State == "NSW") |>
  select(lc) |>
  report()
```

## Lee-Carter models
\fontsize{10}{9}\sf\vspace*{-0.2cm}

```
Age functions
# A tibble: 101 Ã— 3
    Age    ax     bx
  <int> <dbl>  <dbl>
1     0 -4.07 0.0155
2     1 -6.20 0.0221
3     2 -6.89 0.0199
# i 98 more rows

Time coefficients
# A tsibble: 120 x 2 [1Y]
   Year    kt
  <int> <dbl>
1  1901 109.
2  1902 111.
3  1903 108.
# i 117 more rows

Time series model: RW w/ drift

Variance explained: 86.61%
```

## Lee-Carter models
\fontsize{10}{11}\sf

```{r}
#| label: lc3
#| fig-height: 3.7
fit |>
  filter(State == "NSW") |>
  select(lc) |>
  autoplot()
```

## Lee-Carter models
\fontsize{10}{11}\sf

```{r}
#| label: lc4
fit |> select(lc) |> age_components()
```


## Lee-Carter models
\fontsize{10}{11}\sf

```{r}
#| label: lc5
fit |> select(lc) |> time_components()
```

## Lee-Carter forecasts
\fontsize{10}{11}\sf

```{r}
#| label: forecast1
fc <- fit |> forecast(h = 20)
fc
```

## Lee-Carter forecasts
\fontsize{10}{11}\sf

```{r}
#| label: forecast2
fc |> filter(.model == "lc")
```

## Lee-Carter forecasts
\fontsize{10}{11}\sf

```{r}
#| label: forecast3
#| fig-height: 3.7
fc |> filter(State == "NSW", .model == "lc") |>
  autoplot() + scale_y_log10()
```

## Functional data models

Let $m_{x,t}$ be the mortality rate at age $x$ in year $t$.

\begin{block}{}\vspace*{-0.4cm}
\begin{align*}
  \log(m_{t,x}) & = s_t(x) + \sigma_t(x)\varepsilon_{t,x}\\
  s_t(x) & = \mu(x) + \sum_{j=1}^{J}\beta_{t,j}\phi_j(x) + e_t(x)
\end{align*}
\end{block}

  * $s_t(x)=$ smoothed version of $y_t(x)$
  * $\mu(x)=$ mean $s_t(x)$ across years.
  * $\phi_j(x)$ and $\beta_{t,j}$ estimated using principal component \rlap{analysis.}
  * $\beta_{1,j},\dots,\beta_{T,j}$ modelled with ARIMA or ARFIMA \rlap{processes.}

## Functional data models
\fontsize{10}{11}\sf

```{r}
#| label: fdm1
sm_aus <- aus |> smooth_mortality(Mortality)
sm_aus
```


## Functional data models
\fontsize{10}{11}\sf

```{r}
#| label: fdm2
#| fig-height: 3.7
sm_aus <- aus |> smooth_mortality(Mortality)
sm_aus |> filter(State == "NSW", Year == 1980) |> autoplot(Mortality) +
  geom_line(aes(y = .smooth), col = "blue") + scale_y_log10()
```

## Functional data models
\fontsize{10}{11}\sf

```{r}
#| label: fdm3
fit <- sm_aus |> model(hu = FDM(log(.smooth)))
fit
```

## Functional data models
\fontsize{10}{10}\sf

```{r}
#| label: fdm4
fit |>
  filter(Sex == "female", State == "NSW") |>
  select(hu) |>
  report()
```

## Functional data models
\fontsize{9}{8.5}\sf\vspace*{-0.2cm}

```
Coefficients
# A tsibble: 120 x 8 [1Y]
   Year  mean beta1  beta2   beta3     beta4   beta5   beta6
  <int> <dbl> <dbl>  <dbl>   <dbl>     <dbl>   <dbl>   <dbl>
1  1901     1  11.1 -0.522 -0.0553  0.207    0.358    0.0305
2  1902     1  11.8 -0.649  0.399   0.856    0.0319   0.422
3  1903     1  11.5 -0.930 -0.485   0.398    0.399   -0.376
4  1904     1  11.1 -0.827 -0.214  -0.000305 0.00125 -0.0783
5  1905     1  10.2 -0.563 -0.105   0.324    0.122    0.0478
# i 115 more rows
# i Use `print(n = ...)` to see more rows

Time series models
   beta1 : ARIMA(0,1,1) w/ drift
   beta2 : ARIMA(0,2,2)
   beta3 : ARIMA(1,0,1)
   beta4 : ARIMA(0,0,2)
   beta5 : ARIMA(0,0,0)
   beta6 : ARIMA(2,0,2)

Variance explained
  91.38 + 1.81 + 0.58 + 0.49 + 0.42 + 0.39 = 95.06%
```

## Functional data models
\fontsize{10}{11}\sf

```{r}
#| label: fdm5
#| fig-height: 3.7
fit |>
  filter(State == "NSW") |>
  select(hu) |>
  autoplot()
```


## Functional data models
\fontsize{10}{11}\sf

```{r}
#| label: fdm6
fit |> select(hu) |> age_components()
```

## Functional data models
\fontsize{10}{11}\sf

```{r}
#| label: fdm7
fit |> select(hu) |> time_components()
```

## Coherent functional models

\begin{block}{}\vspace*{-0.4cm}
\begin{align*}
  y_t(x) & = s_t(x) + \sigma_t(x)\varepsilon_{t,x}\\
  s_t(x) & = \mu(x) + \sum_{j=1}^{J}\beta_{t,j}\phi_j(x) + e_t(x)
\end{align*}
\end{block}

  * $y_t(x)= \log(m_{x,t}^Mm_{x,t}^F)$ and $\log(m_{x,t}^M/m_{x,t}^F)$
  * $s_t(x)=$ smoothed version of $y_t(x)$
  * $\mu(x)=$ mean $s_t(x)$ across years.
  * $\phi_j(x)$ and $\beta_{t,j}$ estimated using principal component \rlap{analysis.}
  * $\beta_{1,j},\dots,\beta_{T,j}$ modelled with ARIMA for products and ARMA for ratios (to ensure stationary sex-ratios)

## Coherent functional models
\fontsize{10}{11}\sf

```{r}
#| label: coherentfdm1
pr <- sm_aus |> make_pr(.smooth)
pr
```

## Coherent functional models
\fontsize{10}{11}\sf

```{r}
#| label: coherentfdm2
pr <- sm_aus |> make_pr(.smooth)
fit <- pr |> model(hby = FDM(log(.smooth), coherent = TRUE))
fit
```


## Coherent functional models
\fontsize{10}{11}\sf

```{r}
#| label: coherentfdm3
#| fig-height: 3.7
fc <- fit |> forecast(h = 20) |> undo_pr(.smooth)
fc |> filter(State == "VIC")  |> autoplot() + scale_y_log10()
```

# Future plans
## Future plans
\vspace*{-0.2cm}

- Remaining tools from the `demography` \newline package
- Stochastic population forecasting (as per Hyndman-Booth, IJF, 2008)
- All models handled by `StMoMo` package
- All methods from `MortalityLaws` package
- Suggestions from users

\vspace*{0.5cm}

\begin{alertblock}{}
\begin{itemize}\tightlist
\item \textbf{Slides}: \href{https://robjhyndman.com/mpidr2024}{robjhyndman.com/mpidr2024}
\item \textbf{Package}: \href{https://pkg.robjhyndman.com/vital/}{pkg.robjhyndman.com/vital/}
\end{itemize}
\end{alertblock}

\placefig{11.9}{.1}{width=3.5cm}{vital-hex}
