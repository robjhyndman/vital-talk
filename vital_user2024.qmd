---
title: "vital: Tidy data analysis for demography"
author: Rob J Hyndman
date: 9 July 2024
titlegraphic: bg-06.png
toc: false
abstract: I will introduce the vital package which allows analysis of demographic data using tidy tools. The package uses a variation of tsibble objects as the main data class, so all of the infrastructure available for tsibble and tibble objects can also be used with vital objects. Data may include births, deaths, mortality, fertility, population and migration data. Functions for plotting, smoothing, modelling and forecasting data are included. Models include the classical Lee-Carter model as well as functional data models. Future plans include replicating all of the models available in the demography and StMoMo packages. The package is available at pkg.robjhyndman.com/vital/ and on CRAN.
format:
  presentation-beamer:
    template-partials:
        - before-title.tex
execute:
  cache: true
  echo: true
  warning: false
  message: false
---

```{r}
#| label: load-packages
#| echo: false
library(knitr)
library(ggplot2)
library(dplyr)
library(vital)
library(tsibble)
library(kableExtra)
aus <- aus_mortality |>
  mutate(State = Code) |>
  as_vital(index = Year,
    key = c(Age, Sex, State),
    .age = "Age",
    .sex = "Sex",
    .deaths = "Deaths",
    .population = "Exposure"
  ) |>
  arrange(desc(State), Year, Age, Sex) |>
  select(-Code) |>
  filter(Sex != "total", !(State %in% c("ACT","ACTOT","NT")))

# Colours to be viridis for continuous scales and Okabe for discrete scales
options(
  ggplot2.continuous.colour="viridis",
  ggplot2.continuous.fill = "viridis",
  ggplot2.discrete.colour = c("#D55E00", "#0072B2","#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442"),
  ggplot2.discrete.fill = c("#D55E00", "#0072B2","#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)
```

## Demographic data structures in R packages
\vspace*{-0.75cm}

```{r}
#| label: data-classes
#| echo: false
tibble::tribble(
    ~package, ~dataclass,
    "demography", "demogdata",
    "StMoMo", "StMoMoData (created by converting a demogdata object)",
    "StanMoMo", "Lists of matrices",
    "lifecontingencies", "data.frame",
    "BayesMortalityPlus", "tibble (that needs to be converted to a matrix for fitting)",
    "MortalityLaws", "individual vectors",
    "HMDHFDplus", "data.frame",
  )  |>
  kbl(col.names = c("Package", "Data class"),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE
  ) |>
  row_spec(0, bold = TRUE, color = c("#c14b14","#000000")) |>
  column_spec(1, color = "#c14b14")  |>
  column_spec(2, width = "9cm")
```

## tibble objects
\placefig{8.3}{0}{width=2.5cm}{tibble}
\placefig{11.1}{0}{width=2.5cm}{tidyverse}

\alert{Australian Deaths 1901--2020}

```{r}
#| label: tibble
#| echo: false
tibble::as_tibble(aus) |>
  arrange(desc(State), Year, Age, Sex)
```

## tsibble objects
\placefig{8.3}{0}{width=2.5cm}{tsibble}
\alert{Australian Deaths 1901--2020}

```{r}
#| label: tsibble
#| echo: false
tsibble::as_tsibble(aus) |>
  arrange(desc(State), Year, Age, Sex)
```

\begin{textblock}{4}(11.5, 1)
\fontsize{11}{12}\sf
\begin{block}{Variables}
Index:
  \begin{itemize}
    \item \texttt{Year}
  \end{itemize}
Keys:
  \begin{itemize}
    \item \texttt{Age}
    \item \texttt{Sex}
    \item \texttt{State}
  \end{itemize}
\end{block}
\end{textblock}

\begin{textblock}{4}(11.5, 4.73)
\fontsize{11}{12}\sf
\begin{block}{}
Every row must have a unique combination of Index and Keys
\end{block}
\end{textblock}

## vital objects
\placefig{8.3}{0}{width=2.5cm}{vital-hex}
\alert{Australian Deaths 1901--2020}
\vspace*{-0.05cm}

```{r}
#| label: vital
aus
```

\begin{textblock}{4.1}(11.5, 1.)
\fontsize{11}{12}\sf
\begin{block}{Variables}
Index:
  \begin{itemize}
    \item \texttt{Year}
  \end{itemize}
Keys:
  \begin{itemize}
    \item \texttt{Age}
    \item \texttt{Sex}
    \item \texttt{State}
  \end{itemize}
\end{block}
\end{textblock}

\begin{textblock}{4.1}(11.5, 4.73)
\fontsize{11}{12}\sf
\begin{block}{}
Every row must have a unique combination of Index and Keys
\end{block}
\end{textblock}

\begin{textblock}{4.1}(11.5, 6.5)
\fontsize{11}{12}\sf
\begin{block}{}
Variables denoting age, sex, deaths, births and population can also be specified as attributes.
\end{block}
\end{textblock}

## vital objects
\fontsize{11}{13}\sf

```{r}
#| label: vital_index
index_var(aus)
```

\vspace*{0.4cm}

```{r}
#| label: vital_keys
key_vars(aus)
```

\vspace*{0.4cm}

```{r}
#| label: vital_vars
vital_vars(aus)
```

## Rainbow plots

```{r}
#| label: plot0
#| fig-height: 4.3
aus |> autoplot(Mortality) + scale_y_log10()
```

## Rainbow plots

```{r}
#| label: plot1
#| fig-height: 4.3
aus |> filter(State == "VIC") |> autoplot(Mortality) + scale_y_log10()
```

## Rainbow plots

```{r}
#| label: plot2
#| fig-height: 3.5
aus |> filter(State == "VIC") |>
  mutate(Exposure = if_else(Sex == "female", -Exposure, Exposure)) |>
  autoplot(Exposure) +
  facet_grid(State ~ Sex, scales = "free_x") + coord_flip()
```

## Smoothing

```{r}
#| label: smooth1
sm_aus <- aus |> smooth_mortality(Mortality)
sm_aus
```

## Smoothing

```{r}
#| label: smooth2
#| fig-height: 3.7
sm_aus <- aus |> smooth_mortality(Mortality)
sm_aus |> filter(State == "NSW", Year == 1980) |> autoplot(Mortality) +
  geom_line(aes(y = .smooth), col = "blue") + scale_y_log10()
```

## Life tables

```{r}
#| label: life-tables
life_table(aus)
```

## Life expectancy

```{r}
#| label: life-expectancy
life_expectancy(aus)
```

## Life expectancy

```{r}
#| label: life-expectancy2
#| fig-height: 3.5
life_expectancy(aus) |>
  ggplot(aes(x = Year, y = ex, colour = State)) +
  geom_line(linewidth = 1) +
  facet_grid(. ~ Sex)
```

## Mortality models
\fontsize{13}{15}\sf

:::: {.columns}
::: {.column width="55%"}

$m_{x,t}=$ mortality rate at age $x$ in year $t$.
\begin{block}{}\vspace*{-0.5cm}
\begin{align*}
&\text{Naive:} & m_{x,t} &= m_{x,t-1} + \varepsilon_{x,t} \\[0.1cm]
&\text{Lee-Carter:} & \log(m_{x,t}) &= a_x + k_t b_x + \varepsilon_{x,t}
\end{align*}
$\varepsilon_{x,t}=$ noise term with variance $\sigma_x^2$.
\end{block}
\pause\vspace*{0.3cm}

```{r}
#| label: models
fit <- aus |>
  model(
    naive = FNAIVE(Mortality),
    lc = LC(log(Mortality))
  )
```

:::

\pause

::: {.column width="45%"}

```{r}
#| label: showfit
fit
```

:::
::::

## Lee-Carter models
\begin{textblock}{5}(10.5, -0.15)
\begin{alertblock}{}\fontsize{13}{14}\sf
$\log(m_{x,t}) = a_x + k_t b_x + \varepsilon_{x,t}$
\end{alertblock}
\end{textblock}

:::: {.columns}
::: {.column width="50%"}

```{r}
#| label: lc2
#| echo: true
#| output: false
fit |>
  filter(Sex == "female",
         State == "NSW") |>
  select(lc) |>
  report()
```

```
Series: Mortality
Model: LC
Transformation: log(Mortality)

Options:
  Adjust method: dt
  Jump choice: fit
```

:::

::: {.column width="50%"}

```
Age functions
# A tibble: 101 Ã— 3
    Age    ax     bx
  <int> <dbl>  <dbl>
1     0 -4.07 0.0155
2     1 -6.20 0.0221
3     2 -6.89 0.0199
# i 98 more rows

Time coefficients
# A tsibble: 120 x 2 [1Y]
   Year    kt
  <int> <dbl>
1  1901 109.
2  1902 111.
3  1903 108.
# i 117 more rows

Time series model: RW w/ drift
Variance explained: 86.61%
```

:::
::::

## Lee-Carter models
\begin{textblock}{5}(10.5, -0.15)
\begin{alertblock}{}\fontsize{13}{14}\sf
$\log(m_{x,t}) = a_x + k_t b_x + \varepsilon_{x,t}$
\end{alertblock}
\end{textblock}

```{r}
#| label: lc3
#| fig-height: 3.7
fit |>
  filter(State == "NSW") |>
  select(lc) |>
  autoplot()
```

## Lee-Carter models
\begin{textblock}{5}(10.5, -0.15)
\begin{alertblock}{}\fontsize{13}{14}\sf
$\log(m_{x,t}) = a_x + k_t b_x + \varepsilon_{x,t}$
\end{alertblock}
\end{textblock}

:::: {.columns}
::: {.column width="50%"}

```{r}
#| label: lc4
fit |> select(lc) |> age_components()
```

:::

::: {.column width="50%"}

```{r}
#| label: lc5
fit |> select(lc) |> time_components()
```

:::
::::

## Forecasts

```{r}
#| label: forecast1
fc <- fit |> forecast(h = 20)
fc
```

## NSW forecasts using Lee-Carter method

```{r}
#| label: forecast3
#| fig-height: 3.7
fc |> filter(State == "NSW", .model == "lc") |>
  autoplot() + scale_y_log10()
```

## Functional data models
\vspace*{-0.2cm}

Let $m_{x,t}$ be the mortality rate at age $x$ in year $t$.

\begin{block}{}\vspace*{-0.4cm}
\begin{align*}
  \log(m_{t,x}) & = s_t(x) + \sigma_t(x)\varepsilon_{t,x}\\
  s_t(x) & = \mu(x) + \sum_{j=1}^{J}\beta_{tj}\phi_j(x) + e_t(x)
\end{align*}
\end{block}

  * $s_t(x)=$ smoothed version of $y_t(x)$
  * $\mu(x)=$ mean $s_t(x)$ across years.
  * $\phi_j(x)$ and $\beta_{tj}$ estimated using principal component \rlap{analysis.}
  * $\beta_{1j},\dots,\beta_{Tj}$ modelled with ARIMA or ARFIMA \rlap{processes.}


## Functional data models

```{r}
#| label: fdm3
fit <- aus |>
  smooth_mortality(Mortality)  |>
  model(hu = FDM(log(.smooth)))
fit
```

## Functional data models
\begin{textblock}{5.5}(10, -0.15)
\begin{alertblock}{}\fontsize{12}{12}\sf\vspace*{-0.2cm}
\centerline{$s_t(x) = \mu(x) + \displaystyle\sum_{j=1}^{J}\beta_{tj}\phi_j(x) + e_t(x)$}
\vspace*{-0.2cm}
\end{alertblock}
\end{textblock}

```{r}
#| label: fdm4
fit |>
  filter(Sex == "female", State == "NSW") |>
  report()
```

## Functional data models
\begin{textblock}{5.5}(10, -0.15)
\begin{alertblock}{}\fontsize{12}{12}\sf\vspace*{-0.2cm}
\centerline{$s_t(x) = \mu(x) + \displaystyle\sum_{j=1}^{J}\beta_{tj}\phi_j(x) + e_t(x)$}
\vspace*{-0.2cm}
\end{alertblock}
\end{textblock}
\vspace*{-0.2cm}

```
Coefficients
# A tsibble: 120 x 8 [1Y]
   Year  mean beta1  beta2   beta3     beta4   beta5   beta6
  <int> <dbl> <dbl>  <dbl>   <dbl>     <dbl>   <dbl>   <dbl>
1  1901     1  11.1 -0.522 -0.0553  0.207    0.358    0.0305
2  1902     1  11.8 -0.649  0.399   0.856    0.0319   0.422
3  1903     1  11.5 -0.930 -0.485   0.398    0.399   -0.376
4  1904     1  11.1 -0.827 -0.214  -0.000305 0.00125 -0.0783
5  1905     1  10.2 -0.563 -0.105   0.324    0.122    0.0478
# i 115 more rows
# i Use `print(n = ...)` to see more rows

Time series models
   beta1 : ARIMA(0,1,1) w/ drift
   beta2 : ARIMA(0,2,2)
   beta3 : ARIMA(1,0,1)
   beta4 : ARIMA(0,0,2)
   beta5 : ARIMA(0,0,0)
   beta6 : ARIMA(2,0,2)

Variance explained
  91.38 + 1.81 + 0.58 + 0.49 + 0.42 + 0.39 = 95.06%
```

## Functional data models
\begin{textblock}{5.5}(10, -0.15)
\begin{alertblock}{}\fontsize{12}{12}\sf\vspace*{-0.2cm}
\centerline{$s_t(x) = \mu(x) + \displaystyle\sum_{j=1}^{J}\beta_{tj}\phi_j(x) + e_t(x)$}
\vspace*{-0.2cm}
\end{alertblock}
\end{textblock}

```{r}
#| label: fdm5
#| fig-height: 3.7
fit |>
  filter(State == "NSW") |>
  autoplot()
```

## Functional data models
\begin{textblock}{5.5}(10, -0.15)
\begin{alertblock}{}\fontsize{12}{12}\sf\vspace*{-0.2cm}
\centerline{$s_t(x) = \mu(x) + \displaystyle\sum_{j=1}^{J}\beta_{tj}\phi_j(x) + e_t(x)$}
\vspace*{-0.2cm}
\end{alertblock}
\end{textblock}

```{r}
#| label: fdm6
fit |> age_components()
```

## Functional data models
\begin{textblock}{5.5}(10, -0.15)
\begin{alertblock}{}\fontsize{12}{12}\sf\vspace*{-0.2cm}
\centerline{$s_t(x) = \mu(x) + \displaystyle\sum_{j=1}^{J}\beta_{tj}\phi_j(x) + e_t(x)$}
\vspace*{-0.2cm}
\end{alertblock}
\end{textblock}

```{r}
#| label: fdm7
fit |> time_components()
```


## Other functionality
\vspace*{-0.2cm}
\placefig{11.9}{.1}{width=3.5cm}{vital-hex}

* Import data from Human Mortality\newline Database and Human Fertility Database
* Convert demogdata, tsibble & data.frame\newline objects to vital.
* Compute net migration from population,\newline births and deaths.
* Compute total fertility rates from age-specific fertility rates.
* Various smoothing functions
* Coherent functional data models

## Future plans
\vspace*{-0.2cm}

- Remaining tools from the `demography` \newline package
- Stochastic population forecasting (as per Hyndman-Booth, IJF, 2008)
- All models handled by `StMoMo` package
- All methods from `MortalityLaws` package
- Suggestions from users

\vspace*{0.5cm}\pause

\begin{alertblock}{}
\begin{itemize}\tightlist
\item \textbf{Slides}: \href{https://robjhyndman.com/user2024}{robjhyndman.com/user2024}
\item \textbf{Package}: \href{https://pkg.robjhyndman.com/vital/}{pkg.robjhyndman.com/vital/}
\end{itemize}
\end{alertblock}

\placefig{11.9}{.1}{width=3.5cm}{vital-hex}
